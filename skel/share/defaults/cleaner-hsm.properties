#  -----------------------------------------------------------------------
#     Default values for Cleaner
#  -----------------------------------------------------------------------
@DEFAULTS_HEADER@
#
#  The cleaner is the component that watches for files being deleted
#  in the namespace. When files are deleted, the cleaner will notify the
#  pools that hold a copy of the deleted files' data and tell the
#  pools to remove that data.  Optionally, the cleaner can instruct
#  HSM-attached pools to remove copies of the file's data stored on
#  tape.
#
#  The cleaner runs periodically, so there may be a delay between a
#  file being deleted in the namespace and the corresponding deletion
#  of that file's data in pools and on tape.
#
#  The cleaner maintains a list of pools that it was unable to
#  contact: pools are either offline or sufficiently overloaded that
#  they couldn't respond in time.  The cleaner will periodically try
#  to delete data on pools in this list but, between such retries,
#  these pools are excluded from cleaner activity.

# Cell name
cleaner-hsm.cell.name=cleaner-hsm

#  ----- Whether the service is replicable
#
#   Any service in dCache can have several instances as long as these
#   represent separate logical services. Some services can have several
#   instances representing the same logical service, providing some
#   degree of fault tolerance and load balancing. Such services are said
#   to be replicable.
#
#   Instances of a logical service share the same service name, and it is
#   important that the configuration for such instances is synchronized.
#
#   This property indicates if this service is replicable.
#
#   Note: it is the administrator's responsibility to ensure that all
#   cleaner service instances:
#
#       o  share the same database.
#
(immutable)cleaner-hsm.cell.replicable = true

#  ---- Named queues to consume from
#
#   A service can consume messages from named queues. Other services can
#   write messages to such queues. A named queue has an unqualified cell
#   address, that is, an address without a domain name.
#
#   This property contains a comma separated list of named queues to
#   consume from.
#
cleaner-hsm.cell.consume = ${cleaner-hsm.cell.name}

# Message topics to subscribe to.
cleaner-hsm.cell.subscribe = ${dcache.topic.pool-heartbeat}

# Whether space reservations are enabled
(one-of?true|false|${dcache.enable.space-reservation})cleaner-hsm.enable.space-reservation=${dcache.enable.space-reservation}

#  ---- Cleaner thread count
#
#  The number of threads in the cleaner's thread-pool.  This
#  thread-pool is used for all cleaner activity.
#  This number also limits the maximum number of pools cleaned in parallel.
#
cleaner-hsm.limits.threads = 5

#  ---- Period of successive run
#
#  The time between successive cleaner runs.
#
cleaner-hsm.limits.period = 120
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)cleaner-hsm.limits.period.unit = SECONDS

#  ---- Unavailable pool retry time
#
#  The time between successive attempts to clean files from a pool
#  should the pool fail to respond to cleaner requests.
#
cleaner-hsm.service.pool.retry-period = 1800
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)cleaner-hsm.service.pool.retry-period.unit = SECONDS

#  ---- Cell address of space manager
cleaner-hsm.service.spacemanager=${dcache.service.spacemanager}

#  ---- Cell address of pin manager
cleaner-hsm.service.pinmanager=${dcache.service.pinmanager}

#  ---- Report to cell
#
#  Comma separated list of cells to notify upon file deletion. The cleaner will
#  send the notification when a file has been deleted and all its replicas have
#  been cleaned.
#
cleaner-hsm.destination.remove-notification = ${cleaner-hsm.destination.remove-notification.when-${cleaner-hsm.enable.space-reservation}}

(immutable)cleaner-hsm.destination.remove-notification.when-false=${cleaner-hsm.service.pinmanager}
(immutable)cleaner-hsm.destination.remove-notification.when-true=${cleaner-hsm.service.pinmanager},${cleaner-hsm.service.spacemanager}

#  ---- HSM cleaner maximum cached requests
#
#  Regularly, the Cleaner fetches hsm locations of files to delete
#  from the database and caches them for batched dispatch via
#  the property cleaner-hsm.limits.batch-size.
#  In order to not overload the memory of a Cleaner cell, the number of hsm
#  delete locations that are cached at any point in time should be limited.
#  The cleaner-hsm.limits.max-cached-locations allows to set such a limit.
#
cleaner-hsm.limits.max-cached-locations = 12000

#  ---- HSM cleaner maximum requests
#
#  As with messages sent to pools to remove deleted files' data stored
#  on the pool, the cleaner will group together multiple deleted files
#  that had data stored on the HSM and that may be deleted by the same
#  pool. The cleaner-hsm.limits.batch-size property places an upper
#  limit on the number of files a message may contain.
#
cleaner-hsm.limits.batch-size = 100

#  ---- HSM-deleting message communication timeout
#
#  Files are cleaned from an HSM by the cleaner sending a message to
#  an HSM-attached pool. The pool replies with a confirmation
#  message. This property specifies the timeout the cleaner adopts
#  while waiting for the reply after which the operation is considered
#  to have failed.
#
cleaner-hsm.service.pool.timeout = 120
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)cleaner-hsm.service.pool.timeout.unit = SECONDS

#  ---- Cleaner grace time
#
#  The time that the cleaner will wait after file is deleted before it tries to
#  remove it from a pool or HSM.
#
cleaner-hsm.service.grace-period = 0
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)cleaner-hsm.service.grace-period.unit = SECONDS

#
# Database related settings reserved for internal use.
#
(immutable)cleaner-hsm.db.host=${chimera.db.host}
(immutable)cleaner-hsm.db.name=${chimera.db.name}
(immutable)cleaner-hsm.db.user=${chimera.db.user}
(immutable)cleaner-hsm.db.password=${chimera.db.password}
(immutable)cleaner-hsm.db.password.file=${chimera.db.password.file}
(immutable)cleaner-hsm.db.url=${chimera.db.url}
cleaner-hsm.db.schema.auto=false
(prefix)cleaner-hsm.db.hikari-properties = Hikari-specific properties

#
#  The maximum number of concurrent database connections.
#
cleaner-hsm.db.connections.max = 10

#
#  The minimum number of idle database connections.
#
cleaner-hsm.db.connections.idle = 1
