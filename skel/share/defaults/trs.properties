#  -----------------------------------------------------------------------
#     Default values for the tape recall scheduler
#  -----------------------------------------------------------------------
@DEFAULTS_HEADER@
#
#  The tape recall scheduler is the component that clusters and schedules requests
#  that target tape-resident data according to a set of rules before
#  requesting their recall from tape inorder to optimize the performance.

#
# Cell name
#
trs.cell.name = ${dcache.service.trs}

#  ---- Named queues to consume from
#
#   A service can consume messages from named queues. Other services can
#   write messages to such queues. A named queue has an unqualified cell
#   address, that is, an address without a domain name.
#
#   This property contains a comma separated list of named queues to
#   consume from.
#
trs.cell.consume=${trs.cell.name}

#  ----- Whether the service is replicable
#
#   Any service in dCache can have several instances as long as these
#   represent separate logical services. Some services can have several
#   instances representing the same logical service, providing some
#   degree of fault tolerance and load balancing. Such services are said
#   to be replicable.
#
#   Instances of a logical service share the same service name, and it is
#   important that the configuration for such instances is synchronized.
#
#   This property indicates if this service is replicable.
#
(immutable)trs.cell.replicable = false

# ---- Endpoint for contacting pin manager.
#
trs.service.pinmanager=${dcache.service.pinmanager}

# ---- How long to wait for a response from the pin manager.
#
trs.service.pinmanager.timeout=1
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)trs.service.pinmanager.timeout.unit=MINUTES

# ---- Request scheduling strategy for bring-online requests
#
# If enabled, this strategy controls in which order tape recall requests
# are sent to the tape system.
# If disabled, tape recall requests are handled as usual
#
(one-of?true|false)trs.cell.enable = false

# Only used when tape recall scheduling is enabled
# Directory to look for tape info files
#
trs.tapeinfo-dir = ${dcache.paths.tapeinfo}

# Only used when tape recall scheduling is enabled
# Max number of tapes to pass on requests for in parallel
#
trs.max-active-tapes = 1

# Only used when tape recall scheduling is enabled
# Min targeted tape capacity percentage required before passing on requests
#
trs.min-tape-recall-percentage = 60

# Only used when tape recall scheduling is enabled
# Min number of requests for a tape before being selected if min-tape-recall-percentage is not fulfilled.
# A value of -1 indicates that the request count for a tape will not be taken into account.
#
trs.min-request-count-for-tape = 1000

# Only used when tape recall scheduling is enabled
# Min time a request needs to remain in the queue before the tape is being selected. The goal is to
# wait until no more requests are actively arriving for a tape in order to maximize the recall
#
trs.min-time-in-queue = 2
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS)\
trs.min-time-in-queue.unit = MINUTES

# Only used when tape recall scheduling is enabled
# Max time a request is allowed to remain in the queue. A larger number allows for better clustering,
# but will also require more memory and might lead to longer overall waiting times for a tape
#
trs.max-time-in-queue = 1
(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)\
trs.max-time-in-queue.unit = HOURS

# Only used when tape recall scheduling is enabled
# Min time a request without known tape info is kept in the queue before being passed on.
# When the SrmManager is also used to target files without known tape info that should not wait
# until the 'trs.max-time-in-queue' has passed before being processed, it is possible to
# set this parameter to a smaller value.
#
# If these requests also target tape-resident data, it is to be expected that the performance benefit
# achievable by the scheduler may suffer due to more chaotic tape access.
# Setting this number to a negative value disables this special treatment of requests without known tape info.
#
trs.time-in-queue-for-jobs-without-tapeinfo = 10
(one-of?MINUTES|HOURS|DAYS)\
trs.time-in-queue-for-jobs-without-tapeinfo.unit = MINUTES

# ---- Tape info provider
#
# Only used when tape recall scheduling is enabled.
# The tape info provider controls how tape information is accessed that is needed for tape recall clustering.
#
# The provider is pluggable and third party plugins can add new strategies by implementing
# the SPI. Several plugins ship with dCache:
#
#   json    The format of the tape info files is json. The files need to be named tapes.json and tapefiles.json.
#           The tapes.json needs to contain a map with entries of the form:
#           "<tape name>":{"capacity":<capacity in kB>,"filled":<filled in kB>}
#           The tapefiles.json needs to contain a map with entries of the form:
#           "<pnfsid>":{"size":<file size in kB>,"tapeid":"<tape name>"}
#
#   csv    The format of the tape info files is csv. The files need to be named tapes.txt and tapefiles.txt.
#          The tapes.txt needs to contain lines of the form:
#          <tape name>,<capacity in kB>,<filled in kB>
#          The tapefiles.txt needs to comtain lines of the form:
#          <pnfsid>,<file size in kB>,<tape name>
#
trs.tapeinfoprovider = json